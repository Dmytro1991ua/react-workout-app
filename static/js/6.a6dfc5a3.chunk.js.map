{"version":3,"sources":["images/leaflet/marker.png","styles/WorkoutsStyles.js","styles/FormStyles.js","components/Form.js","styles/WorkoutStyles.js","components/Workout.js","leafletMap/leafletMap.js","hooks/useGeolocation.js","components/Marker.js","components/WorkoutsMap.js","components/Workouts.js"],"names":["WorkoutsSection","styled","section","colors","mantis","WorkoutsSectionBody","div","WorkoutsFeatures","aside","darkBlue","FeaturesTitle","h3","white","Map","powderAsh","FormSection","form","lighterBlue","fadeInDown","FormRow","FormLabel","label","FormSelect","select","FormInput","input","mantisDarker","FormButton","button","Form","useContext","WorkoutsContext","distanceData","durationData","cadenceData","elevationGainData","workoutRender","submit","selectedValue","setSelectedValue","distance","setDistance","duration","setDuration","cadence","setCadence","elevationGain","setElevationGain","getWorkoutData","setShowForm","setIsSubmitted","onSubmit","event","preventDefault","onChange","target","value","required","placeholder","parseInt","WorkoutSection","tomato","WorkoutTitle","WorkoutDetails","WorkoutIcon","span","WorkoutValue","WorkoutUnit","Workout","workout","description","speed","pace","id","className","leafletDetails","useGeolocation","currentLocation","location","setLocation","onSuccess","loaded","coordinates","lat","coords","latitude","lng","longitude","onError","errorMessage","useEffect","navigator","geolocation","code","getCurrentPosition","markerIcon","L","Icon","iconUrl","require","default","iconSize","iconAnchor","popupAnchor","Marker","marker","markerCoordinates","workoutDescription","MapConsumer","map","icon","addTo","bindPopup","popup","autoClose","closeOnClick","setPopupContent","openPopup","WorkoutsMap","showForm","setMakerCoordinates","isSubmitted","currentPosition","MarkerCoordinates","useMapEvents","click","e","latlng","error","MapContainer","center","zoom","TileLayer","attribution","url","Workouts","workoutsData","workouts"],"mappings":"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","file":"static/js/6.a6dfc5a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marker.aba9ec04.png\";","import styled from \"styled-components\";\r\nimport { colors } from \"./GlobalStyles\";\r\n\r\nexport const WorkoutsSection = styled.section`\r\n  min-height: 100vh;\r\n  margin: 8rem 1.2rem 1.2rem 1.2rem;\r\n  border: 5px solid ${colors.mantis};\r\n  border-radius: 1.2rem;\r\n  overscroll-behavior-y: none;\r\n  @media (min-width: 48em) {\r\n    margin: 10rem 1.2rem 1.2rem 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const WorkoutsSectionBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (min-width: 62em) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\n//WorkoutsFeatures\r\nexport const WorkoutsFeatures = styled.aside`\r\n  min-height: 10rem;\r\n  background-color: ${colors.darkBlue};\r\n  border-top-left-radius: 1.2rem;\r\n  border-top-right-radius: 1.2rem;\r\n  padding: 0 1.2rem;\r\n\r\n  @media (min-width: 62em) {\r\n    min-height: 100vh;\r\n    flex: 0 1 44rem;\r\n    border-top-right-radius: 0rem;\r\n    border-bottom-left-radius: 1.2rem;\r\n  }\r\n\r\n  @media (min-width: 75em) {\r\n    flex: 0 1 50rem;\r\n  }\r\n`;\r\n\r\nexport const FeaturesTitle = styled.h3`\r\n  font-size: 2.5rem;\r\n  font-family: \"Akaya Telivigala\", cursive;\r\n  color: ${colors.white};\r\n  text-align: center;\r\n  padding: 1rem 0 0 0;\r\n  margin-bottom: 2rem;\r\n  letter-spacing: 0.1rem;\r\n\r\n  @media (min-width: 62em) {\r\n    font-size: 3rem;\r\n    padding: 3rem 0 0 0;\r\n  }\r\n`;\r\n\r\n//WorkoutsMap;\r\nexport const Map = styled.div`\r\n  flex: 1;\r\n  background: ${colors.powderAsh};\r\n  overflow: hidden;\r\n  height: 100vh;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { colors, fadeInDown } from \"./GlobalStyles\";\r\n\r\nexport const FormSection = styled.form`\r\n  background-color: ${colors.lighterBlue};\r\n  border-radius: 5px;\r\n  padding: 1.2rem 1.2rem;\r\n  margin-bottom: 1.75rem;\r\n  display: grid;\r\n  gap: 1.5rem 2.5rem;\r\n  transition: all 0.5s, transform 1ms;\r\n  border: 2px solid ${colors.mantis};\r\n  animation: ${fadeInDown} .3s ease-in-out;\r\n\r\n  @media (min-width: 48em) {\r\n    grid-template-columns: 1fr 1fr;\r\n    padding: 1.5rem 2.75rem;\r\n  }\r\n`;\r\n\r\nexport const FormRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  flex: 0 0 50%;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin-right: 0.7rem;\r\n  color: ${colors.mantis};\r\n`;\r\n\r\nexport const FormSelect = styled.select`\r\n  width: 100%;\r\n  background-color: ${colors.powderAsh};\r\n  padding: 0.3rem 0rem;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  width: 100%;\r\n  padding: 0.3rem 1.1rem;\r\n  font-family: inherit;\r\n  font-size: 1.4rem;\r\n  border: none;\r\n  border-radius: 3px;\r\n  background-color: ${colors.powderAsh};\r\n  transition: all 0.2s ease-in-out;\r\n  border: 2px solid ${colors.mantisDarker};\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  width: 15rem;\r\n  border: none;\r\n  padding: 1rem 1.2rem;\r\n  text-align: center;\r\n  border-radius: 1.2rem;\r\n  background-color: ${colors.mantis};\r\n  font-size: 1.5rem;\r\n  color: ${colors.white};\r\n  transition: all 0.3s ease-out;\r\n  text-transform: uppercase;\r\n  margin-top: 1rem;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.mantisDarker};\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  FormButton,\r\n  FormInput,\r\n  FormLabel,\r\n  FormRow,\r\n  FormSection,\r\n  FormSelect,\r\n} from \"../styles/FormStyles\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../leafletMap/LeafletStyles.css\";\r\n\r\nconst Form = () => {\r\n  // destructure selected workout's value, workouts data \"states\"\r\n  const {\r\n    select,\r\n    distanceData,\r\n    durationData,\r\n    cadenceData,\r\n    elevationGainData,\r\n    workoutRender,\r\n    form,\r\n    submit,\r\n  } = useContext(WorkoutsContext);\r\n\r\n  const [selectedValue, setSelectedValue] = select;\r\n  const [distance, setDistance] = distanceData;\r\n  const [duration, setDuration] = durationData;\r\n  const [cadence, setCadence] = cadenceData;\r\n  const [elevationGain, setElevationGain] = elevationGainData;\r\n  const [getWorkoutData] = workoutRender;\r\n  const [showForm, setShowForm] = form;\r\n  const [isSubmitted, setIsSubmitted] = submit;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    getWorkoutData(selectedValue); //get workout data from form based on a select value\r\n\r\n    setDistance(\"\");\r\n    setDuration(\"\");\r\n    setCadence(\"\");\r\n    setElevationGain(\"\");\r\n\r\n    setShowForm(false); // hide Form component onSubmit a form\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormSection onSubmit={handleSubmit}>\r\n        <FormRow>\r\n          <FormLabel>Type</FormLabel>\r\n          <FormSelect\r\n            onChange={(event) => setSelectedValue(event.target.value)}\r\n            required\r\n            value={selectedValue}\r\n          >\r\n            <option value=\"running\">Running</option>\r\n            <option value=\"cycling\">Cycling</option>\r\n          </FormSelect>\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormLabel>Distance</FormLabel>\r\n          <FormInput\r\n            value={distance}\r\n            placeholder=\"km\"\r\n            onChange={(event) => setDistance(parseInt(event.target.value) || \"\")}\r\n            required\r\n          />\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormLabel>Duration</FormLabel>\r\n          <FormInput\r\n            value={duration}\r\n            placeholder=\"min\"\r\n            onChange={(event) => setDuration(parseInt(event.target.value) || \"\")}\r\n            required\r\n          />\r\n        </FormRow>\r\n        <FormRow>\r\n          {/* Render either \"Cadence\" or 'Elevation Gain' based on selected value */}\r\n          <>\r\n            {selectedValue === \"running\" && (\r\n              <>\r\n                <FormLabel>Cadence</FormLabel>\r\n                <FormInput\r\n                  value={cadence}\r\n                  placeholder=\"step/min\"\r\n                  onChange={(event) => setCadence(parseInt(event.target.value) || \"\")}\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n            {selectedValue === \"cycling\" && (\r\n              <>\r\n                <FormLabel>Elev Gain</FormLabel>\r\n                <FormInput\r\n                  value={elevationGain}\r\n                  placeholder=\"meters\"\r\n                  onChange={(event) =>\r\n                    setElevationGain(parseInt(event.target.value) || \"\")\r\n                  }\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n          </>\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormButton>Add workout</FormButton>\r\n        </FormRow>\r\n      </FormSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\nimport { FormSection } from \"./FormStyles\";\r\nimport { colors } from \"./GlobalStyles\";\r\n\r\nexport const WorkoutSection = styled(FormSection)`\r\n  grid-template-columns: 1fr 1fr;\r\n  border: none;\r\n  padding: 1.5rem 2rem;\r\n\r\n  &.running {\r\n    border-left: 5px solid ${colors.mantis};\r\n  }\r\n  &.cycling {\r\n    border-left: 5px solid ${colors.tomato};\r\n  }\r\n  @media (min-width: 48em) {\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    padding: 2.5rem 2.2rem;\r\n  }\r\n`;\r\n\r\nexport const WorkoutTitle = styled.h3`\r\n  font-size: 2.3rem;\r\n  font-weight: 700;\r\n  font-family: \"Akaya Telivigala\", cursive;\r\n  color: ${colors.white};\r\n  letter-spacing: 0.1rem;\r\n  grid-column: 1 / -1;\r\n  border-bottom: 1px solid ${colors.mantisDarker};\r\n  padding-bottom: .5rem;\r\n`;\r\n\r\nexport const WorkoutDetails = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`;\r\n\r\nexport const WorkoutIcon = styled.span`\r\n  font-size: 1.8rem;\r\n  margin-right: 0.2rem;\r\n  height: 0.28rem;\r\n`;\r\n\r\nexport const WorkoutValue = styled.span`\r\n  font-size: 1.5rem;\r\n  margin-right: 0.5rem;\r\n  color: ${colors.white};\r\n`;\r\n\r\nexport const WorkoutUnit = styled.span`\r\n  font-size: 1.1rem;\r\n  color: ${colors.powderAsh};\r\n  text-transform: uppercase;\r\n  font-weight: 800;\r\n`;\r\n","import {\r\n  WorkoutDetails,\r\n  WorkoutIcon,\r\n  WorkoutSection,\r\n  WorkoutTitle,\r\n  WorkoutUnit,\r\n  WorkoutValue,\r\n} from \"../styles/WorkoutStyles\";\r\n\r\nconst Workout = ({ workout }) => {\r\n  const {\r\n    description,\r\n    selectedValue,\r\n    distance,\r\n    duration,\r\n    speed,\r\n    pace,\r\n    cadence,\r\n     elevationGain,\r\n    id\r\n  } = workout;\r\n  return (\r\n    <WorkoutSection className={selectedValue === \"running\" ? \"running\" : \"cycling\"} id={id}>\r\n      <WorkoutTitle>{description}</WorkoutTitle>\r\n      <WorkoutDetails>\r\n        <WorkoutIcon>{selectedValue === \"running\" ? \"🏃‍♂️\" : \"🚴‍♀️\"}</WorkoutIcon>\r\n        <WorkoutValue>{distance}</WorkoutValue>\r\n        <WorkoutUnit>km</WorkoutUnit>\r\n      </WorkoutDetails>\r\n      <WorkoutDetails>\r\n        <WorkoutIcon>⏱</WorkoutIcon>\r\n        <WorkoutValue>{duration}</WorkoutValue>\r\n        <WorkoutUnit>min</WorkoutUnit>\r\n      </WorkoutDetails>\r\n      <WorkoutDetails>\r\n        <WorkoutIcon>⚡️</WorkoutIcon>\r\n        <WorkoutValue>\r\n          {selectedValue === \"running\" ? pace : speed}\r\n        </WorkoutValue>\r\n        <WorkoutUnit>\r\n          {selectedValue === \"running\" ? \"min/km\" : \"km/h\"}\r\n        </WorkoutUnit>\r\n      </WorkoutDetails>\r\n      <WorkoutDetails>\r\n        <WorkoutIcon>{selectedValue === \"running\" ? \"🦶🏼\" : \"⛰\"}</WorkoutIcon>\r\n        <WorkoutValue>\r\n          {selectedValue === \"running\" ? cadence : elevationGain}\r\n        </WorkoutValue>\r\n        <WorkoutUnit>{selectedValue === \"running\" ? \"spm\" : \"m\"}</WorkoutUnit>\r\n      </WorkoutDetails>\r\n    </WorkoutSection>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","export const leafletDetails = {\r\n  url: \"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\",\r\n  attribution:\r\n    '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n};\r\n","import { useContext, useEffect} from \"react\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\n//custom hook to get a user's current location\r\nconst useGeolocation = () => {\r\n  // destructure current location \"state\"\r\n  const { currentLocation } = useContext(WorkoutsContext);\r\n  const [location, setLocation] = currentLocation;\r\n\r\n  const onSuccess = (location) => {\r\n    setLocation({\r\n      loaded: true,\r\n      coordinates: {\r\n        lat: location.coords.latitude,\r\n        lng: location.coords.longitude,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onError = (errorMessage) => {\r\n    setLocation({\r\n      loaded: true,\r\n      errorMessage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!navigator.geolocation)\r\n      return onError({\r\n        code: 0,\r\n        errorMessage: \"Geolocation not suppoeted\",\r\n      });\r\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n  }, []);\r\n\r\n  return location;\r\n};\r\n\r\nexport default useGeolocation;\r\n","import React, { useContext } from \"react\";\r\nimport { MapConsumer} from \"react-leaflet\";\r\nimport L from \"leaflet\"; // import Leaflet object from a library\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../leafletMap/LeafletStyles.css\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\n//create a leaflet map marker\r\nconst markerIcon = new L.Icon({\r\n  iconUrl: require(\"../images/leaflet/marker.png\").default,\r\n  iconSize: [50, 55],\r\n  iconAnchor: [0, 60],\r\n  popupAnchor: [23, -60],\r\n});\r\n\r\nconst Marker = () => {\r\n  const { marker, description, select } = useContext(WorkoutsContext);\r\n\r\n  const [markerCoordinates] = marker;\r\n  const [workoutDescription] = description;\r\n  const [selectedValue] = select;\r\n \r\n  return (\r\n    <MapConsumer>\r\n      {/* get access to a \"map\" object of a leaflet, get markers position based on click to a map and render with popup*/}\r\n      {(map) => {\r\n        L.marker(markerCoordinates, { icon: markerIcon })\r\n          .addTo(map)\r\n          .bindPopup(\r\n            L.popup({\r\n              autoClose: false,\r\n              closeOnClick: false,\r\n              className:\r\n                selectedValue === \"running\" ? \"running-popup\" : \"cycling-popup\",\r\n            })\r\n          )\r\n          .setPopupContent(\r\n            `${\r\n              selectedValue === \"running\" ? \"🏃‍♂️\" : \"🚴‍♀️\"\r\n            }  ${workoutDescription()}`\r\n          )\r\n          .openPopup();\r\n        return null;\r\n      }}\r\n    </MapConsumer>\r\n  );\r\n};\r\n\r\nexport default Marker;\r\n","import { MapContainer, TileLayer, useMapEvents } from \"react-leaflet\";\r\nimport React, { useContext } from \"react\";\r\nimport { leafletDetails } from \"../leafletMap/leafletMap\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../leafletMap/LeafletStyles.css\";\r\nimport useGeolocation from \"../hooks/useGeolocation\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\nimport Marker from \"./Marker\";\r\n\r\nconst WorkoutsMap = () => {\r\n  // destructure certain \"states\" from Context\r\n  const { form, marker, submit } = useContext(WorkoutsContext);\r\n\r\n  const [showForm, setShowForm] = form;\r\n  const [markerCoordinates, setMakerCoordinates] = marker;\r\n  const [isSubmitted, setIsSubmitted] = submit;\r\n\r\n  //geolocation custom hook\r\n  const location = useGeolocation();\r\n  const currentPosition = [location.coordinates.lat, location.coordinates.lng];\r\n\r\n  const ZOOM_LEVEL = 13; //default zoom level\r\n\r\n  //show workouts form onClick to a leaflet map\r\n  const handleShowForm = () => {\r\n    setShowForm(true);\r\n  };\r\n\r\n  //get a clicked marker coordinates, store them in a \"state\" and show workout\r\n  const MarkerCoordinates = () => {\r\n    useMapEvents({\r\n      click: (e) => {\r\n        handleShowForm();\r\n        const { lat, lng } = e.latlng;\r\n        setMakerCoordinates([lat, lng]);\r\n      },\r\n    });\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Render leaflet map when current location is loaded and there is no error*/}\r\n      {location.loaded && !location.error && (\r\n        <MapContainer center={currentPosition} zoom={ZOOM_LEVEL}>\r\n          <TileLayer\r\n            attribution={leafletDetails.attribution}\r\n            url={leafletDetails.url}\r\n          />\r\n          <MarkerCoordinates />\r\n          {/* render a Marker on map after submitting a workout form*/}\r\n          <>{isSubmitted && !showForm && <Marker />}</>\r\n        </MapContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default WorkoutsMap;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  FeaturesTitle,\r\n  WorkoutsFeatures,\r\n  Map,\r\n  WorkoutsSection,\r\n  WorkoutsSectionBody,\r\n} from \"../styles/WorkoutsStyles\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\nimport Form from \"./Form\";\r\nimport Workout from \"./Workout\";\r\nimport WorkoutsMap from \"./WorkoutsMap\";\r\n\r\nconst Workouts = () => {\r\n  // destructure certain \"states\" from Context\r\n  const { form, workoutsData} = useContext(WorkoutsContext);\r\n  const [showForm] = form;\r\n  const [workouts] = workoutsData;\r\n \r\n\r\n  return (\r\n    <WorkoutsSection>\r\n      <WorkoutsSectionBody>\r\n        <WorkoutsFeatures>\r\n          <FeaturesTitle>Workouts Information</FeaturesTitle>\r\n          {showForm && <Form />}\r\n          {workouts.map((workout) => (\r\n            <Workout key={workout.id} workout={workout} />\r\n          ))}\r\n        </WorkoutsFeatures>\r\n        <Map>\r\n          <WorkoutsMap />\r\n        </Map>\r\n      </WorkoutsSectionBody>\r\n    </WorkoutsSection>\r\n  );\r\n};\r\n\r\nexport default Workouts;\r\n"],"sourceRoot":""}