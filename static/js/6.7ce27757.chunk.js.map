{"version":3,"sources":["images/leaflet/marker.png","styles/FormStyles.js","components/Form.js","styles/WorkoutStyles.js","components/Workout.js","leafletMap/leafletMap.js","hooks/useGeolocation.js","components/Marker.js","components/WorkoutsMap.js","components/Workouts.js"],"names":["FormSection","styled","form","colors","lighterBlue","mantis","fadeInDown","FormRow","div","FormLabel","label","FormSelect","select","powderAsh","FormInput","input","mantisDarker","FormButton","button","white","Form","useContext","WorkoutsContext","distanceData","durationData","cadenceData","elevationGainData","workoutRender","submit","selectedValue","setSelectedValue","distance","setDistance","duration","setDuration","cadence","setCadence","elevationGain","setElevationGain","getWorkoutData","setShowForm","setIsSubmitted","onSubmit","event","preventDefault","onChange","target","value","required","placeholder","parseInt","WorkoutSection","tomato","WorkoutHeader","WorkoutTitle","h3","RemoveBtn","TimesCircle","WorkoutDetails","WorkoutIcon","span","WorkoutValue","WorkoutUnit","Workout","workout","workoutsData","setStorage","workouts","setWorkouts","setLocaleStorage","description","speed","pace","id","mapRef","useRef","useEffect","console","log","current","className","data-id","onClick","clickedWorkout","find","currentTarget","getAttribute","coordinates","removedWorkout","filter","handleRemoveWorkout","leafletDetails","useGeolocation","currentLocation","location","setLocation","onSuccess","loaded","lat","coords","latitude","lng","longitude","onError","errorMessage","navigator","geolocation","code","getCurrentPosition","markerIcon","L","Icon","iconUrl","require","default","iconSize","iconAnchor","popupAnchor","Marker","position","marker","workoutDescription","MapConsumer","map","icon","addTo","bindPopup","popup","autoClose","closeOnClick","setPopupContent","openPopup","WorkoutsMap","showForm","markerCoordinates","setMakerCoordinates","isSubmitted","currentPosition","MarkerCoordinates","useMapEvents","click","e","latlng","localStorage","setItem","JSON","stringify","markerCoords","parse","getItem","error","MapContainer","center","zoom","TileLayer","attribution","url","index","Workouts","sortedWorkouts","sort","obj1","obj2"],"mappings":"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","file":"static/js/6.7ce27757.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marker.aba9ec04.png\";","import styled from \"styled-components\";\r\nimport { colors, fadeInDown } from \"./GlobalStyles\";\r\n\r\nexport const FormSection = styled.form`\r\n  background-color: ${colors.lighterBlue};\r\n  border-radius: 5px;\r\n  padding: 1.2rem 1.2rem;\r\n  margin-bottom: 1.75rem;\r\n  display: grid;\r\n  gap: 1.5rem 2.5rem;\r\n  transition: all 0.5s, transform 1ms;\r\n  border: 2px solid ${colors.mantis};\r\n  animation: ${fadeInDown} .3s ease-in-out;\r\n\r\n  @media (min-width: 48em) {\r\n    grid-template-columns: 1fr 1fr;\r\n    padding: 1.5rem 2.75rem;\r\n  }\r\n`;\r\n\r\nexport const FormRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  flex: 0 0 50%;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin-right: 0.7rem;\r\n  color: ${colors.mantis};\r\n`;\r\n\r\nexport const FormSelect = styled.select`\r\n  width: 100%;\r\n  background-color: ${colors.powderAsh};\r\n  padding: 0.3rem 0rem;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  width: 100%;\r\n  padding: 0.3rem 1.1rem;\r\n  font-family: inherit;\r\n  font-size: 1.4rem;\r\n  border: none;\r\n  border-radius: 3px;\r\n  background-color: ${colors.powderAsh};\r\n  transition: all 0.2s ease-in-out;\r\n  border: 2px solid ${colors.mantisDarker};\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  width: 15rem;\r\n  border: none;\r\n  padding: 1rem 1.2rem;\r\n  text-align: center;\r\n  border-radius: 1.2rem;\r\n  background-color: ${colors.mantis};\r\n  font-size: 1.5rem;\r\n  color: ${colors.white};\r\n  transition: all 0.3s ease-out;\r\n  text-transform: uppercase;\r\n  margin-top: 1rem;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.mantisDarker};\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  FormButton,\r\n  FormInput,\r\n  FormLabel,\r\n  FormRow,\r\n  FormSection,\r\n  FormSelect,\r\n} from \"../styles/FormStyles\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../leafletMap/LeafletStyles.css\";\r\n\r\nconst Form = () => {\r\n  // destructure selected workout's value, workouts data \"states\"\r\n  const {\r\n    select,\r\n    distanceData,\r\n    durationData,\r\n    cadenceData,\r\n    elevationGainData,\r\n    workoutRender,\r\n    form,\r\n    submit,\r\n  } = useContext(WorkoutsContext);\r\n\r\n  const [selectedValue, setSelectedValue] = select;\r\n  const [distance, setDistance] = distanceData;\r\n  const [duration, setDuration] = durationData;\r\n  const [cadence, setCadence] = cadenceData;\r\n  const [elevationGain, setElevationGain] = elevationGainData;\r\n  const [getWorkoutData] = workoutRender;\r\n  const [showForm, setShowForm] = form;\r\n  const [isSubmitted, setIsSubmitted] = submit;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    getWorkoutData(selectedValue); //get workout data from form based on a select value\r\n\r\n    setDistance(\"\");\r\n    setDuration(\"\");\r\n    setCadence(\"\");\r\n    setElevationGain(\"\");\r\n\r\n    setShowForm(false); // hide Form component onSubmit a form\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormSection onSubmit={handleSubmit}>\r\n        <FormRow>\r\n          <FormLabel>Type</FormLabel>\r\n          <FormSelect\r\n            onChange={(event) => setSelectedValue(event.target.value)}\r\n            required\r\n            value={selectedValue}\r\n          >\r\n            <option value=\"running\">Running</option>\r\n            <option value=\"cycling\">Cycling</option>\r\n          </FormSelect>\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormLabel>Distance</FormLabel>\r\n          <FormInput\r\n            value={distance}\r\n            placeholder=\"km\"\r\n            onChange={(event) => setDistance(parseInt(event.target.value) || \"\")}\r\n            required\r\n          />\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormLabel>Duration</FormLabel>\r\n          <FormInput\r\n            value={duration}\r\n            placeholder=\"min\"\r\n            onChange={(event) => setDuration(parseInt(event.target.value) || \"\")}\r\n            required\r\n          />\r\n        </FormRow>\r\n        <FormRow>\r\n          {/* Render either \"Cadence\" or 'Elevation Gain' based on selected value */}\r\n          <>\r\n            {selectedValue === \"running\" && (\r\n              <>\r\n                <FormLabel>Cadence</FormLabel>\r\n                <FormInput\r\n                  value={cadence}\r\n                  placeholder=\"step/min\"\r\n                  onChange={(event) => setCadence(parseInt(event.target.value) || \"\")}\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n            {selectedValue === \"cycling\" && (\r\n              <>\r\n                <FormLabel>Elev Gain</FormLabel>\r\n                <FormInput\r\n                  value={elevationGain}\r\n                  placeholder=\"meters\"\r\n                  onChange={(event) =>\r\n                    setElevationGain(parseInt(event.target.value) || \"\")\r\n                  }\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n          </>\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormButton>Add workout</FormButton>\r\n        </FormRow>\r\n      </FormSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\nimport { FormSection } from \"./FormStyles\";\r\nimport { colors } from \"./GlobalStyles\";\r\nimport { TimesCircle } from \"@styled-icons/fa-solid\";\r\n\r\nexport const WorkoutSection = styled(FormSection)`\r\n  grid-template-columns: 1fr 1fr;\r\n  border: none;\r\n  padding: 1.5rem 2rem;\r\n  position: relative;\r\n \r\n  &.running {\r\n    border-left: 5px solid ${colors.mantis};\r\n  }\r\n  &.cycling {\r\n    border-left: 5px solid ${colors.tomato};\r\n  }\r\n\r\n  @media (min-width: 48em) {\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    padding: 2.5rem 2.2rem;\r\n  }\r\n`;\r\n\r\nexport const WorkoutHeader = styled.div`\r\n  grid-column: 1 / -1;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.mantisDarker};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const WorkoutTitle = styled.h3`\r\n  font-size: 2.3rem;\r\n  font-weight: 700;\r\n  font-family: \"Akaya Telivigala\", cursive;\r\n  color: ${colors.white};\r\n  letter-spacing: 0.1rem;\r\n  //grid-column: 1 / -1;\r\n`;\r\n\r\nexport const RemoveBtn = styled(TimesCircle)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  color: ${colors.tomato};\r\n  transition: all 0.3s ease-in-out;\r\n  cursor: pointer;\r\n  @media (min-width: 48em) {\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\n\r\nexport const WorkoutDetails = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`;\r\n\r\nexport const WorkoutIcon = styled.span`\r\n  font-size: 1.8rem;\r\n  margin-right: 0.2rem;\r\n  height: 0.28rem;\r\n`;\r\n\r\nexport const WorkoutValue = styled.span`\r\n  font-size: 1.5rem;\r\n  margin-right: 0.5rem;\r\n  color: ${colors.white};\r\n`;\r\n\r\nexport const WorkoutUnit = styled.span`\r\n  font-size: 1.1rem;\r\n  color: ${colors.powderAsh};\r\n  text-transform: uppercase;\r\n  font-weight: 800;\r\n`;\r\n\r\n","import { useRef, useEffect, useContext } from \"react\";\r\n\r\nimport {\r\n  RemoveBtn,\r\n  WorkoutDetails,\r\n  WorkoutHeader,\r\n  WorkoutIcon,\r\n  WorkoutSection,\r\n  WorkoutTitle,\r\n  WorkoutUnit,\r\n  WorkoutValue,\r\n} from \"../styles/WorkoutStyles\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\nconst Workout = ({ workout }) => {\r\n  const { workoutsData, setStorage } = useContext(WorkoutsContext);\r\n  const [workouts, setWorkouts] = workoutsData;\r\n  const [setLocaleStorage] = setStorage;\r\n  const {\r\n    description,\r\n    selectedValue,\r\n    distance,\r\n    duration,\r\n    speed,\r\n    pace,\r\n    cadence,\r\n    elevationGain,\r\n    id,\r\n  } = workout;\r\n\r\n  const mapRef = useRef();\r\n\r\n  const handleClick = (event) => {\r\n    const clickedWorkout = workouts.find(\r\n      (workout) => workout.id === event.currentTarget.getAttribute(\"data-id\")\r\n    );\r\n    console.log(clickedWorkout.coordinates);\r\n    console.log(event.currentTarget.getAttribute(\"data-id\"));\r\n    console.log(workout.id);\r\n\r\n    // map.setView(clickedWorkout.coordinates, 13, {\r\n    //   animate: true,\r\n    //   pan: {\r\n    //     duration: 1,\r\n    //   },\r\n    // });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // set the initialized map to the ref\r\n    // mapRef.current = L.map(\"map\").flyTo(clickedWorkout.coordinates, 13, {\r\n    //   animate: true,\r\n    //   pan: {\r\n    //     duration: 1,\r\n    //   },\r\n    // });\r\n    console.log(mapRef.current);\r\n  }, []);\r\n\r\n  // delete a particular clicked workout from UI as well as localStorage\r\n  const handleRemoveWorkout = (workout) => {\r\n    const removedWorkout = workouts.filter(clickedWorkout => clickedWorkout.id !== workout.id)\r\n    setWorkouts(removedWorkout);\r\n    setLocaleStorage(removedWorkout);\r\n  }\r\n  return (\r\n    <>\r\n      <WorkoutSection\r\n        className={selectedValue === \"running\" ? \"running\" : \"cycling\"}\r\n        data-id={id}\r\n         onClick={handleClick}\r\n      >\r\n        <WorkoutHeader>\r\n          <WorkoutTitle>{description}</WorkoutTitle>\r\n          <RemoveBtn onClick={() => handleRemoveWorkout(workout)} />\r\n        </WorkoutHeader>\r\n        <WorkoutDetails>\r\n          <WorkoutIcon>{selectedValue === \"running\" ? \"🏃‍♂️\" : \"🚴‍♀️\"}</WorkoutIcon>\r\n          <WorkoutValue>{distance}</WorkoutValue>\r\n          <WorkoutUnit>km</WorkoutUnit>\r\n        </WorkoutDetails>\r\n        <WorkoutDetails>\r\n          <WorkoutIcon>⏱</WorkoutIcon>\r\n          <WorkoutValue>{duration}</WorkoutValue>\r\n          <WorkoutUnit>min</WorkoutUnit>\r\n        </WorkoutDetails>\r\n        <WorkoutDetails>\r\n          <WorkoutIcon>⚡️</WorkoutIcon>\r\n          <WorkoutValue>\r\n            {selectedValue === \"running\" ? pace : speed}\r\n          </WorkoutValue>\r\n          <WorkoutUnit>\r\n            {selectedValue === \"running\" ? \"min/km\" : \"km/h\"}\r\n          </WorkoutUnit>\r\n        </WorkoutDetails>\r\n        <WorkoutDetails>\r\n          <WorkoutIcon>{selectedValue === \"running\" ? \"🦶🏼\" : \"⛰\"}</WorkoutIcon>\r\n          <WorkoutValue>\r\n            {selectedValue === \"running\" ? cadence : elevationGain}\r\n          </WorkoutValue>\r\n          <WorkoutUnit>{selectedValue === \"running\" ? \"spm\" : \"m\"}</WorkoutUnit>\r\n        </WorkoutDetails>\r\n      </WorkoutSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","export const leafletDetails = {\r\n  url: \"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\",\r\n  attribution:\r\n    '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n};\r\n","import { useContext, useEffect} from \"react\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\n//custom hook to get a user's current location\r\nconst useGeolocation = () => {\r\n  // destructure current location \"state\"\r\n  const { currentLocation } = useContext(WorkoutsContext);\r\n  const [location, setLocation] = currentLocation;\r\n\r\n  const onSuccess = (location) => {\r\n    setLocation({\r\n      loaded: true,\r\n      coordinates: {\r\n        lat: location.coords.latitude,\r\n        lng: location.coords.longitude,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onError = (errorMessage) => {\r\n    setLocation({\r\n      loaded: true,\r\n      errorMessage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!navigator.geolocation)\r\n      return onError({\r\n        code: 0,\r\n        errorMessage: \"Geolocation not suppoeted\",\r\n      });\r\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n  }, []);\r\n\r\n  return location;\r\n};\r\n\r\nexport default useGeolocation;\r\n","import React, { useContext } from \"react\";\r\nimport { MapConsumer } from \"react-leaflet\";\r\nimport L from \"leaflet\"; // import Leaflet object from a library\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../leafletMap/LeafletStyles.css\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\n//create a leaflet map marker\r\nconst markerIcon = new L.Icon({\r\n  iconUrl: require(\"../images/leaflet/marker.png\").default,\r\n  iconSize: [50, 55],\r\n  iconAnchor: [0, 60],\r\n  popupAnchor: [23, -60],\r\n});\r\n\r\nconst Marker = ({ position }) => {\r\n  const { marker, description, select} = useContext(WorkoutsContext);\r\n\r\n  const [workoutDescription] = description;\r\n  const [selectedValue] = select;\r\n  \r\n  return (\r\n    <MapConsumer>\r\n      {/* get access to a \"map\" object of a leaflet, get markers position based on click to a map and render with popup*/}\r\n      {(map) => {\r\n        L.marker(position, { icon: markerIcon })\r\n          .addTo(map)\r\n          .bindPopup(\r\n            L.popup({\r\n              autoClose: false,\r\n              closeOnClick: false,\r\n              className:\r\n                selectedValue === \"running\" ? \"running-popup\" : \"cycling-popup\",\r\n            })\r\n          )\r\n          .setPopupContent(\r\n            `${\r\n              selectedValue === \"running\" ? \"🏃‍♂️\" : \"🚴‍♀️\"\r\n            }  ${workoutDescription()}`\r\n          )\r\n          .openPopup();\r\n        return null;\r\n      }}\r\n    </MapConsumer>\r\n  );\r\n};\r\n\r\nexport default Marker;\r\n","import { MapContainer, TileLayer, useMapEvents } from \"react-leaflet\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { leafletDetails } from \"../leafletMap/leafletMap\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"../leafletMap/LeafletStyles.css\";\r\nimport useGeolocation from \"../hooks/useGeolocation\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\nimport Marker from \"./Marker\";\r\n\r\nconst WorkoutsMap = () => {\r\n  // destructure certain \"states\" from Context\r\n  const { form, marker, submit, workoutsData } = useContext(\r\n    WorkoutsContext\r\n  );\r\n\r\n  const [showForm, setShowForm] = form;\r\n  const [markerCoordinates, setMakerCoordinates] = marker;\r\n  const [isSubmitted, setIsSubmitted] = submit;\r\n\r\n  //geolocation custom hook\r\n  const location = useGeolocation();\r\n  const currentPosition = [location.coordinates.lat, location.coordinates.lng];\r\n\r\n  const ZOOM_LEVEL = 13; //default zoom level\r\n\r\n  //show workouts form onClick to a leaflet map\r\n  const handleShowForm = () => {\r\n    setShowForm(true);\r\n  };\r\n\r\n  //get a clicked marker coordinates, store them in a \"state\" and show workout\r\n  const MarkerCoordinates = () => {\r\n    useMapEvents({\r\n      click: (e) => {\r\n        handleShowForm();\r\n        const { lat, lng } = e.latlng;\r\n        console.log(e.latlng);\r\n        const coords = [lat, lng];\r\n        //setMakerCoordinates(coords);\r\n        setMakerCoordinates([...markerCoordinates, coords]);\r\n\r\n        localStorage.setItem(\r\n          \"marker-coords\",\r\n          JSON.stringify([...markerCoordinates, coords])\r\n        );\r\n        // const coords = [lat, lng];\r\n        // seStoredMarkerCoords([...storedMarkerCoods, coords]);\r\n        // console.log(storedMarkerCoods);\r\n        // localStorage.setItem(\r\n        //   \"position-latitude\",\r\n        //   JSON.stringify([...storedMarkerCoods, coords])\r\n        // );\r\n        // //localStorage.setItem(\"position-longitude\", current.lng);\r\n      },\r\n    });\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const markerCoords = JSON.parse(localStorage.getItem(\"marker-coords\"));\r\n\r\n    if (!markerCoords) return;\r\n\r\n    setMakerCoordinates(markerCoords);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* Render leaflet map when current location is loaded and there is no error*/}\r\n      {location.loaded && !location.error && (\r\n        <MapContainer center={currentPosition} zoom={ZOOM_LEVEL}>\r\n          <TileLayer\r\n            attribution={leafletDetails.attribution}\r\n            url={leafletDetails.url}\r\n          />\r\n          <MarkerCoordinates />\r\n          {/* render a Marker on map after submitting a workout form*/}\r\n          <>\r\n            {isSubmitted &&\r\n              !showForm &&\r\n              markerCoordinates.map((coords, index) => (\r\n                <Marker key={index} position={coords} />\r\n              ))}\r\n          </>\r\n        </MapContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default WorkoutsMap;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  FeaturesTitle,\r\n  WorkoutsFeatures,\r\n  Map,\r\n  WorkoutsSection,\r\n  WorkoutsSectionBody,\r\n} from \"../styles/WorkoutsStyles\";\r\nimport { WorkoutsContext } from \"../WorkoutsContext\";\r\n\r\nimport Form from \"./Form\";\r\nimport Workout from \"./Workout\";\r\nimport WorkoutsMap from \"./WorkoutsMap\";\r\n\r\nconst Workouts = () => {\r\n  // destructure certain \"states\" from Context\r\n  const { form, workoutsData } = useContext(WorkoutsContext);\r\n  const [showForm] = form;\r\n  const [workouts] = workoutsData;\r\n\r\n  // sort out a workouts array with object in order to display last added object to an array as a first in a list\r\n  const sortedWorkouts = workouts.sort((obj1, obj2) => obj2.id - obj1.id);\r\n \r\n  return (\r\n    <WorkoutsSection>\r\n      <WorkoutsSectionBody>\r\n        <WorkoutsFeatures>\r\n          <FeaturesTitle>Workouts Information</FeaturesTitle>\r\n          {showForm && <Form />}\r\n          {sortedWorkouts.map((workout) => (\r\n            <Workout key={workout.id} workout={workout} />\r\n          ))}\r\n        </WorkoutsFeatures>\r\n        <Map>\r\n          <WorkoutsMap />\r\n        </Map>\r\n      </WorkoutsSectionBody>\r\n    </WorkoutsSection>\r\n  );\r\n};\r\n\r\nexport default Workouts;\r\n"],"sourceRoot":""}