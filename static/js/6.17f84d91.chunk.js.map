{"version":3,"sources":["images/leaflet/marker.png","styles/FormStyles.js","components/Form.js","styles/WorkoutStyles.js","components/Workout.js","hooks/useGeolocation.js","leafletMap/leafletMap.js","components/Marker.js","components/WorkoutsMap.js","components/Workouts.js"],"names":["FormSection","styled","form","colors","lighterBlue","mantis","fadeInDown","FormRow","div","FormLabel","label","FormSelect","select","powderAsh","FormInput","input","mantisDarker","FormButton","button","white","Form","useContext","WorkoutsContext","distanceData","durationData","cadenceData","elevationGainData","workoutRender","submit","selectedValue","setSelectedValue","distance","setDistance","duration","setDuration","cadence","setCadence","elevationGain","setElevationGain","getWorkoutData","setShowForm","setIsSubmitted","onSubmit","event","preventDefault","onChange","target","value","required","placeholder","parseInt","WorkoutSection","tomato","WorkoutHeader","WorkoutTitle","h3","RemoveBtn","TimesCircle","WorkoutDetails","WorkoutIcon","span","WorkoutValue","WorkoutUnit","Workout","workout","workoutsData","setStorage","workouts","setWorkouts","setLocaleStorage","description","speed","pace","id","useEffect","className","onClick","removedWorkout","filter","clickedWorkout","handleRemoveWorkout","useGeolocation","currentLocation","location","setLocation","onSuccess","loaded","coordinates","lat","coords","latitude","lng","longitude","onError","errorMessage","navigator","geolocation","code","getCurrentPosition","leafletDetails","markerIcon","L","Icon","iconUrl","require","default","iconSize","iconAnchor","popupAnchor","Marker","position","workoutDescription","MapConsumer","map","marker","icon","addTo","bindPopup","popup","autoClose","closeOnClick","setPopupContent","openPopup","WorkoutsMap","showForm","markerCoordinates","setMakerCoordinates","isSubmitted","currentPosition","MarkerCoordinates","useMapEvents","click","e","latlng","localStorage","setItem","JSON","stringify","markerCoords","parse","getItem","error","MapContainer","center","zoom","TileLayer","attribution","url","index","Workouts","sortedWorkouts","sort","obj1","obj2"],"mappings":"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","file":"static/js/6.17f84d91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/marker.aba9ec04.png\";","import styled from 'styled-components';\r\n\r\nimport { colors, fadeInDown } from './GlobalStyles';\r\n\r\nexport const FormSection = styled.form`\r\n  background-color: ${colors.lighterBlue};\r\n  border-radius: 5px;\r\n  padding: 1.2rem 1.2rem;\r\n  margin-bottom: 1.75rem;\r\n  display: grid;\r\n  gap: 1.5rem 2.5rem;\r\n  transition: all 0.5s, transform 1ms;\r\n  border: 2px solid ${colors.mantis};\r\n  animation: ${fadeInDown} 0.3s ease-in-out;\r\n\r\n  @media (min-width: 48em) {\r\n    grid-template-columns: 1fr 1fr;\r\n    padding: 1.5rem 2.75rem;\r\n  }\r\n`;\r\n\r\nexport const FormRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  flex: 0 0 50%;\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  margin-right: 0.7rem;\r\n  color: ${colors.mantis};\r\n`;\r\n\r\nexport const FormSelect = styled.select`\r\n  width: 100%;\r\n  background-color: ${colors.powderAsh};\r\n  padding: 0.3rem 0rem;\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  width: 100%;\r\n  padding: 0.3rem 1.1rem;\r\n  font-family: inherit;\r\n  font-size: 1.4rem;\r\n  border: none;\r\n  border-radius: 3px;\r\n  background-color: ${colors.powderAsh};\r\n  transition: all 0.2s ease-in-out;\r\n  border: 2px solid ${colors.mantisDarker};\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  width: 15rem;\r\n  border: none;\r\n  padding: 1rem 1.2rem;\r\n  text-align: center;\r\n  border-radius: 1.2rem;\r\n  background-color: ${colors.mantis};\r\n  font-size: 1.5rem;\r\n  color: ${colors.white};\r\n  transition: all 0.3s ease-out;\r\n  text-transform: uppercase;\r\n  margin-top: 1rem;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${colors.mantisDarker};\r\n  }\r\n`;\r\n","import 'leaflet/dist/leaflet.css';\r\nimport React, { useContext } from 'react';\r\nimport '../leafletMap/LeafletStyles.css';\r\n\r\nimport { FormButton, FormInput, FormLabel, FormRow, FormSection, FormSelect } from '../styles/FormStyles';\r\nimport { WorkoutsContext } from '../WorkoutsContext';\r\n\r\nconst Form = () => {\r\n  // destructure selected workout's value, workouts data \"states\"\r\n  const { select, distanceData, durationData, cadenceData, elevationGainData, workoutRender, form, submit } =\r\n    useContext(WorkoutsContext);\r\n\r\n  const [selectedValue, setSelectedValue] = select;\r\n  const [distance, setDistance] = distanceData;\r\n  const [duration, setDuration] = durationData;\r\n  const [cadence, setCadence] = cadenceData;\r\n  const [elevationGain, setElevationGain] = elevationGainData;\r\n  const [getWorkoutData] = workoutRender;\r\n  const [setShowForm] = form;\r\n  const [setIsSubmitted] = submit;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    getWorkoutData(selectedValue); //get workout data from form based on a select value\r\n\r\n    setDistance('');\r\n    setDuration('');\r\n    setCadence('');\r\n    setElevationGain('');\r\n\r\n    setShowForm(false); // hide Form component onSubmit a form\r\n    setIsSubmitted(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormSection onSubmit={handleSubmit}>\r\n        <FormRow>\r\n          <FormLabel>Type</FormLabel>\r\n          <FormSelect onChange={(event) => setSelectedValue(event.target.value)} required value={selectedValue}>\r\n            <option value='running'>Running</option>\r\n            <option value='cycling'>Cycling</option>\r\n          </FormSelect>\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormLabel>Distance</FormLabel>\r\n          <FormInput\r\n            value={distance}\r\n            placeholder='km'\r\n            onChange={(event) => setDistance(parseInt(event.target.value) || '')}\r\n            required\r\n          />\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormLabel>Duration</FormLabel>\r\n          <FormInput\r\n            value={duration}\r\n            placeholder='min'\r\n            onChange={(event) => setDuration(parseInt(event.target.value) || '')}\r\n            required\r\n          />\r\n        </FormRow>\r\n        <FormRow>\r\n          {/* Render either \"Cadence\" or 'Elevation Gain' based on selected value */}\r\n          <>\r\n            {selectedValue === 'running' && (\r\n              <>\r\n                <FormLabel>Cadence</FormLabel>\r\n                <FormInput\r\n                  value={cadence}\r\n                  placeholder='step/min'\r\n                  onChange={(event) => setCadence(parseInt(event.target.value) || '')}\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n            {selectedValue === 'cycling' && (\r\n              <>\r\n                <FormLabel>Elev Gain</FormLabel>\r\n                <FormInput\r\n                  value={elevationGain}\r\n                  placeholder='meters'\r\n                  onChange={(event) => setElevationGain(parseInt(event.target.value) || '')}\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n          </>\r\n        </FormRow>\r\n        <FormRow>\r\n          <FormButton>Add workout</FormButton>\r\n        </FormRow>\r\n      </FormSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { TimesCircle } from '@styled-icons/fa-solid';\r\nimport styled from 'styled-components';\r\n\r\nimport { FormSection } from './FormStyles';\r\nimport { colors } from './GlobalStyles';\r\n\r\nexport const WorkoutSection = styled(FormSection)`\r\n  grid-template-columns: 1fr 1fr;\r\n  border: none;\r\n  padding: 1.5rem 2rem;\r\n  position: relative;\r\n\r\n  &.running {\r\n    border-left: 5px solid ${colors.mantis};\r\n  }\r\n  &.cycling {\r\n    border-left: 5px solid ${colors.tomato};\r\n  }\r\n\r\n  @media (min-width: 48em) {\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    padding: 2.5rem 2.2rem;\r\n  }\r\n`;\r\n\r\nexport const WorkoutHeader = styled.div`\r\n  grid-column: 1 / -1;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${colors.mantisDarker};\r\n  padding-bottom: 0.5rem;\r\n`;\r\n\r\nexport const WorkoutTitle = styled.h3`\r\n  font-size: 2.3rem;\r\n  font-weight: 700;\r\n  font-family: 'Akaya Telivigala', cursive;\r\n  color: ${colors.white};\r\n  letter-spacing: 0.1rem;\r\n  //grid-column: 1 / -1;\r\n`;\r\n\r\nexport const RemoveBtn = styled(TimesCircle)`\r\n  width: 2rem;\r\n  height: 2rem;\r\n  color: ${colors.tomato};\r\n  transition: all 0.3s ease-in-out;\r\n  cursor: pointer;\r\n  @media (min-width: 48em) {\r\n    width: 3rem;\r\n    height: 3rem;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const WorkoutDetails = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`;\r\n\r\nexport const WorkoutIcon = styled.span`\r\n  font-size: 1.8rem;\r\n  margin-right: 0.2rem;\r\n  height: 0.28rem;\r\n`;\r\n\r\nexport const WorkoutValue = styled.span`\r\n  font-size: 1.5rem;\r\n  margin-right: 0.5rem;\r\n  color: ${colors.white};\r\n`;\r\n\r\nexport const WorkoutUnit = styled.span`\r\n  font-size: 1.1rem;\r\n  color: ${colors.powderAsh};\r\n  text-transform: uppercase;\r\n  font-weight: 800;\r\n`;\r\n","import { useEffect, useContext } from 'react';\r\n\r\nimport {\r\n  RemoveBtn,\r\n  WorkoutDetails,\r\n  WorkoutHeader,\r\n  WorkoutIcon,\r\n  WorkoutSection,\r\n  WorkoutTitle,\r\n  WorkoutUnit,\r\n  WorkoutValue,\r\n} from '../styles/WorkoutStyles';\r\nimport { WorkoutsContext } from '../WorkoutsContext';\r\n\r\nconst Workout = ({ workout }) => {\r\n  const { workoutsData, setStorage } = useContext(WorkoutsContext);\r\n  const [workouts, setWorkouts] = workoutsData;\r\n  const [setLocaleStorage] = setStorage;\r\n  const { description, selectedValue, distance, duration, speed, pace, cadence, elevationGain, id } = workout;\r\n\r\n  //const mapRef = useRef();\r\n\r\n  const handleClick = () => {\r\n    // const clickedWorkout = workouts.find((workout) => workout.id === event.currentTarget.getAttribute('data-id'));\r\n    // map.setView(clickedWorkout.coordinates, 13, {\r\n    //   animate: true,\r\n    //   pan: {\r\n    //     duration: 1,\r\n    //   },\r\n    // });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // set the initialized map to the ref\r\n    // mapRef.current = L.map(\"map\").flyTo(clickedWorkout.coordinates, 13, {\r\n    //   animate: true,\r\n    //   pan: {\r\n    //     duration: 1,\r\n    //   },\r\n    // });\r\n  }, []);\r\n\r\n  // delete a particular clicked workout from UI as well as localStorage\r\n  const handleRemoveWorkout = (workout) => {\r\n    const removedWorkout = workouts.filter((clickedWorkout) => clickedWorkout.id !== workout.id);\r\n    setWorkouts(removedWorkout);\r\n    setLocaleStorage(removedWorkout);\r\n  };\r\n  return (\r\n    <>\r\n      <WorkoutSection\r\n        className={selectedValue === 'running' ? 'running' : 'cycling'}\r\n        data-id={id}\r\n        onClick={handleClick}>\r\n        <WorkoutHeader>\r\n          <WorkoutTitle>{description}</WorkoutTitle>\r\n          <RemoveBtn onClick={() => handleRemoveWorkout(workout)} />\r\n        </WorkoutHeader>\r\n        <WorkoutDetails>\r\n          <WorkoutIcon>{selectedValue === 'running' ? '🏃‍♂️' : '🚴‍♀️'}</WorkoutIcon>\r\n          <WorkoutValue>{distance}</WorkoutValue>\r\n          <WorkoutUnit>km</WorkoutUnit>\r\n        </WorkoutDetails>\r\n        <WorkoutDetails>\r\n          <WorkoutIcon>⏱</WorkoutIcon>\r\n          <WorkoutValue>{duration}</WorkoutValue>\r\n          <WorkoutUnit>min</WorkoutUnit>\r\n        </WorkoutDetails>\r\n        <WorkoutDetails>\r\n          <WorkoutIcon>⚡️</WorkoutIcon>\r\n          <WorkoutValue>{selectedValue === 'running' ? pace : speed}</WorkoutValue>\r\n          <WorkoutUnit>{selectedValue === 'running' ? 'min/km' : 'km/h'}</WorkoutUnit>\r\n        </WorkoutDetails>\r\n        <WorkoutDetails>\r\n          <WorkoutIcon>{selectedValue === 'running' ? '🦶🏼' : '⛰'}</WorkoutIcon>\r\n          <WorkoutValue>{selectedValue === 'running' ? cadence : elevationGain}</WorkoutValue>\r\n          <WorkoutUnit>{selectedValue === 'running' ? 'spm' : 'm'}</WorkoutUnit>\r\n        </WorkoutDetails>\r\n      </WorkoutSection>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Workout;\r\n","import { useContext, useEffect } from 'react';\r\n\r\nimport { WorkoutsContext } from '../WorkoutsContext';\r\n\r\n//custom hook to get a user's current location\r\nconst useGeolocation = () => {\r\n  // destructure current location \"state\"\r\n  const { currentLocation } = useContext(WorkoutsContext);\r\n  const [location, setLocation] = currentLocation;\r\n\r\n  const onSuccess = (location) => {\r\n    setLocation({\r\n      loaded: true,\r\n      coordinates: {\r\n        lat: location.coords.latitude,\r\n        lng: location.coords.longitude,\r\n      },\r\n    });\r\n  };\r\n\r\n  const onError = (errorMessage) => {\r\n    setLocation({\r\n      loaded: true,\r\n      errorMessage,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!navigator.geolocation)\r\n      return onError({\r\n        code: 0,\r\n        errorMessage: 'Geolocation not suppoeted',\r\n      });\r\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n  }, []);\r\n\r\n  return location;\r\n};\r\n\r\nexport default useGeolocation;\r\n","export const leafletDetails = {\r\n  url: 'https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',\r\n  attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n};\r\n","import L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport React, { useContext } from 'react';\r\nimport { MapConsumer } from 'react-leaflet';\r\nimport '../leafletMap/LeafletStyles.css';\r\n\r\nimport { WorkoutsContext } from '../WorkoutsContext';\r\n\r\n//create a leaflet map marker\r\nconst markerIcon = new L.Icon({\r\n  iconUrl: require('../images/leaflet/marker.png').default,\r\n  iconSize: [50, 55],\r\n  iconAnchor: [0, 60],\r\n  popupAnchor: [23, -60],\r\n});\r\n\r\nconst Marker = ({ position }) => {\r\n  const { description, select } = useContext(WorkoutsContext);\r\n\r\n  const [workoutDescription] = description;\r\n  const [selectedValue] = select;\r\n\r\n  return (\r\n    <MapConsumer>\r\n      {/* get access to a \"map\" object of a leaflet, get markers position based on click to a map and render with popup*/}\r\n      {(map) => {\r\n        L.marker(position, { icon: markerIcon })\r\n          .addTo(map)\r\n          .bindPopup(\r\n            L.popup({\r\n              autoClose: false,\r\n              closeOnClick: false,\r\n              className: selectedValue === 'running' ? 'running-popup' : 'cycling-popup',\r\n            })\r\n          )\r\n          .setPopupContent(`${selectedValue === 'running' ? '🏃‍♂️' : '🚴‍♀️'}  ${workoutDescription()}`)\r\n          .openPopup();\r\n        return null;\r\n      }}\r\n    </MapConsumer>\r\n  );\r\n};\r\n\r\nexport default Marker;\r\n","import 'leaflet/dist/leaflet.css';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, useMapEvents } from 'react-leaflet';\r\n\r\nimport useGeolocation from '../hooks/useGeolocation';\r\nimport { leafletDetails } from '../leafletMap/leafletMap';\r\nimport '../leafletMap/LeafletStyles.css';\r\nimport { WorkoutsContext } from '../WorkoutsContext';\r\nimport Marker from './Marker';\r\n\r\nconst WorkoutsMap = () => {\r\n  // destructure certain \"states\" from Context\r\n  const { form, marker, submit } = useContext(WorkoutsContext);\r\n\r\n  const [showForm, setShowForm] = form;\r\n  const [markerCoordinates, setMakerCoordinates] = marker;\r\n  const [isSubmitted] = submit;\r\n\r\n  //geolocation custom hook\r\n  const location = useGeolocation();\r\n  const currentPosition = [location.coordinates.lat, location.coordinates.lng];\r\n\r\n  const ZOOM_LEVEL = 13; //default zoom level\r\n\r\n  //show workouts form onClick to a leaflet map\r\n  const handleShowForm = () => {\r\n    setShowForm(true);\r\n  };\r\n\r\n  //get a clicked marker coordinates, store them in a \"state\" and show workout\r\n  const MarkerCoordinates = () => {\r\n    useMapEvents({\r\n      click: (e) => {\r\n        handleShowForm();\r\n        const { lat, lng } = e.latlng;\r\n\r\n        const coords = [lat, lng];\r\n        //setMakerCoordinates(coords);\r\n        setMakerCoordinates([...markerCoordinates, coords]);\r\n\r\n        localStorage.setItem('marker-coords', JSON.stringify([...markerCoordinates, coords]));\r\n        // const coords = [lat, lng];\r\n        // seStoredMarkerCoords([...storedMarkerCoods, coords]);\r\n        // console.log(storedMarkerCoods);\r\n        // localStorage.setItem(\r\n        //   \"position-latitude\",\r\n        //   JSON.stringify([...storedMarkerCoods, coords])\r\n        // );\r\n        // //localStorage.setItem(\"position-longitude\", current.lng);\r\n      },\r\n    });\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const markerCoords = JSON.parse(localStorage.getItem('marker-coords'));\r\n\r\n    if (!markerCoords) return;\r\n\r\n    setMakerCoordinates(markerCoords);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* Render leaflet map when current location is loaded and there is no error*/}\r\n      {location.loaded && !location.error && (\r\n        <MapContainer center={currentPosition} zoom={ZOOM_LEVEL}>\r\n          <TileLayer attribution={leafletDetails.attribution} url={leafletDetails.url} />\r\n          <MarkerCoordinates />\r\n          {/* render a Marker on map after submitting a workout form*/}\r\n          <>\r\n            {isSubmitted &&\r\n              !showForm &&\r\n              markerCoordinates.map((coords, index) => <Marker key={index} position={coords} />)}\r\n          </>\r\n        </MapContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default WorkoutsMap;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { FeaturesTitle, Map, WorkoutsFeatures, WorkoutsSection, WorkoutsSectionBody } from '../styles/WorkoutsStyles';\r\nimport { WorkoutsContext } from '../WorkoutsContext';\r\nimport Form from './Form';\r\nimport Workout from './Workout';\r\nimport WorkoutsMap from './WorkoutsMap';\r\n\r\nconst Workouts = () => {\r\n  // destructure certain \"states\" from Context\r\n  const { form, workoutsData } = useContext(WorkoutsContext);\r\n  const [showForm] = form;\r\n  const [workouts] = workoutsData;\r\n\r\n  // sort out a workouts array with object in order to display last added object to an array as a first in a list\r\n  const sortedWorkouts = workouts.sort((obj1, obj2) => obj2.id - obj1.id);\r\n\r\n  return (\r\n    <WorkoutsSection>\r\n      <WorkoutsSectionBody>\r\n        <WorkoutsFeatures>\r\n          <FeaturesTitle>Workouts Information</FeaturesTitle>\r\n          {showForm && <Form />}\r\n          {sortedWorkouts.map((workout) => (\r\n            <Workout key={workout.id} workout={workout} />\r\n          ))}\r\n        </WorkoutsFeatures>\r\n        <Map>\r\n          <WorkoutsMap />\r\n        </Map>\r\n      </WorkoutsSectionBody>\r\n    </WorkoutsSection>\r\n  );\r\n};\r\n\r\nexport default Workouts;\r\n"],"sourceRoot":""}